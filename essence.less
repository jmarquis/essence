//////////////////////////////////////////////////////////////////////////
//
//   This is Essence.
//
//   http://jmarquis.github.com/essence
//   Minimalist, responsive, semantic grids built with LESS.
//  
//////////////////////////////////////////////////////////////////////////

// unfortunately this global definition is necessary for now
@float-breakpoint: 768px;

#grid {

	@total-columns: 12;

	@xl-context-gutter: 20px;
	@large-context-gutter: 20px;
	@med-context-gutter: 12px;
	@small-context-gutter: 0;
	
	.row () {
		.clearfix();
	}

	.column (@columns) {

		@media (min-width: @float-breakpoint) {
			float: left;
			width: percentage(@columns / @total-columns);
		}

		min-height: 1px;

		// use large context by default
		padding-left: (@large-context-gutter / 2);
		padding-right: (@large-context-gutter / 2);

		@media (min-width: @xl-context-min) {
			padding-left: (@xl-context-gutter / 2);
			padding-right: (@xl-context-gutter / 2);
		}

		@media (min-width: @med-context-min) and (max-width: @med-context-max) {
			padding-left: (@med-context-gutter / 2);
			padding-right: (@med-context-gutter / 2);
		}

		@media (max-width: @small-context-max) {
			padding-left: (@small-context-gutter / 2);
			padding-right: (@small-context-gutter / 2);
		}
	}
	
	// disable floats at full width
	.column (@columns) when (@columns = @float-breakpoint) {
		@media (min-width: @float-breakpoint) {
			float: none;
		}
	}

	.offset (@columns) {
		@media (min-width: @float-breakpoint) {
			margin-left: percentage(@columns / @total-columns);
		}
	}
}